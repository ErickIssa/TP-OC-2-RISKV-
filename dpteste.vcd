$date
	Sun Jun 01 15:56:59 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module data_path_tb $end
$var wire 1 ! endFile $end
$var reg 1 " clockDP_ $end
$var reg 201 # nomeArquivoInstDP_ [200:0] $end
$var reg 1 $ resetDP_ $end
$var reg 32 % valorReg [31:0] $end
$var integer 32 & i [31:0] $end
$scope module dpR5 $end
$var wire 1 " clockDP $end
$var wire 201 ' nomeArquivoDP [200:0] $end
$var wire 1 $ resetDP $end
$var wire 32 ( writeRegDataDP [31:0] $end
$var wire 1 ) regWriteDP $end
$var wire 32 * readMemDP [31:0] $end
$var wire 32 + readData2DP [31:0] $end
$var wire 32 , readData1DP [31:0] $end
$var wire 32 - pcOutDP [31:0] $end
$var wire 32 . pcInDP [31:0] $end
$var wire 32 / muxAluOutDP [31:0] $end
$var wire 1 0 memWriteDP $end
$var wire 1 1 memToRegDP $end
$var wire 1 2 memReadDP $end
$var wire 32 3 instructionDP [31:0] $end
$var wire 32 4 immGenOutDP [31:0] $end
$var wire 4 5 f3f7AluCtrlDP [3:0] $end
$var wire 1 ! endFile $end
$var wire 1 6 branchTaken $end
$var wire 1 7 branchDP $end
$var wire 1 8 aluZeroDP $end
$var wire 1 9 aluSrcDP $end
$var wire 32 : aluOutDP [31:0] $end
$var wire 2 ; aluOpDP [1:0] $end
$var wire 4 < aluCtrlDP [3:0] $end
$var wire 32 = addBranchDP [31:0] $end
$var wire 32 > add4OutDP [31:0] $end
$scope module add4 $end
$var wire 32 ? a [31:0] $end
$var wire 32 @ out [31:0] $end
$var wire 32 A b [31:0] $end
$upscope $end
$scope module addBranch $end
$var wire 32 B out [31:0] $end
$var wire 32 C b [31:0] $end
$var wire 32 D a [31:0] $end
$upscope $end
$scope module alu $end
$var wire 1 8 zeroAlu $end
$var wire 32 E aluInput2 [31:0] $end
$var wire 32 F aluInput1 [31:0] $end
$var wire 4 G aluControlAlu [3:0] $end
$var reg 32 H aluResultAlu [31:0] $end
$upscope $end
$scope module aluControl $end
$var wire 4 I f3f7ACtrl [3:0] $end
$var wire 1 J funct7ACtrl $end
$var wire 3 K funct3ACtrl [2:0] $end
$var wire 2 L aluOpACtrl [1:0] $end
$var reg 4 M aluCtrlACtrl [3:0] $end
$upscope $end
$scope module ctrlDP $end
$var wire 7 N instructionCtrl [6:0] $end
$var wire 1 ) RegWriteCtrl $end
$var wire 1 0 MemWriteCtrl $end
$var wire 1 1 MemToRegCtrl $end
$var wire 1 2 MemReadCtrl $end
$var wire 1 7 BranchCtrl $end
$var wire 1 9 ALUSrcCtrl $end
$var wire 2 O ALUOpCtrl [1:0] $end
$var reg 8 P outputCtrl [7:0] $end
$upscope $end
$scope module dataMem $end
$var wire 32 Q addressDM [31:0] $end
$var wire 1 " clock $end
$var wire 1 2 memReadDM $end
$var wire 1 0 memWriteDM $end
$var wire 32 R writeDataDM [31:0] $end
$var reg 32 S readDataDM [31:0] $end
$upscope $end
$scope module immGen $end
$var wire 32 T instructionImmGen [31:0] $end
$var reg 32 U immediateImmGen [31:0] $end
$upscope $end
$scope module insMem $end
$var wire 201 V nomeArquivo [200:0] $end
$var wire 32 W readAddress [31:0] $end
$var reg 1 ! fimDoArquivo $end
$var reg 32 X instruction [31:0] $end
$var reg 32 Y linha [31:0] $end
$var integer 32 Z arquivo [31:0] $end
$var integer 32 [ error [31:0] $end
$upscope $end
$scope module muxAdds $end
$var wire 1 6 ctrl $end
$var wire 32 \ input1 [31:0] $end
$var wire 32 ] input2 [31:0] $end
$var wire 32 ^ out [31:0] $end
$upscope $end
$scope module muxAlu $end
$var wire 1 9 ctrl $end
$var wire 32 _ input2 [31:0] $end
$var wire 32 ` out [31:0] $end
$var wire 32 a input1 [31:0] $end
$upscope $end
$scope module muxDataMem $end
$var wire 1 1 ctrl $end
$var wire 32 b input1 [31:0] $end
$var wire 32 c input2 [31:0] $end
$var wire 32 d out [31:0] $end
$upscope $end
$scope module pcDP $end
$var wire 1 " clock $end
$var wire 32 e pcIn [31:0] $end
$var wire 1 $ reset $end
$var reg 32 f pcOut [31:0] $end
$upscope $end
$scope module regMem $end
$var wire 1 " clock $end
$var wire 5 g readReg1 [4:0] $end
$var wire 5 h readReg2 [4:0] $end
$var wire 1 ) regWrite $end
$var wire 32 i writeData [31:0] $end
$var wire 5 j writeRegId [4:0] $end
$var reg 32 k readData1 [31:0] $end
$var reg 32 l readData2 [31:0] $end
$var integer 32 m i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b100000 m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
b10000000000000000000000000000011 Z
bx Y
bx X
bx W
b110100101101110011100000111010101110100010001000101000000101110011101000111100001110100 V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
xJ
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
b100 ?
bx >
bx =
bx <
bx ;
bx :
x9
x8
x7
x6
bx 5
bx 4
bx 3
x2
x1
x0
bx /
bx .
bx -
bx ,
bx +
bx *
x)
bx (
b110100101101110011100000111010101110100010001000101000000101110011101000111100001110100 '
bx &
bx %
0$
b110100101101110011100000111010101110100010001000101000000101110011101000111100001110100 #
0"
x!
$end
#1000
08
b101 (
b101 d
b101 i
b10 <
b10 G
b10 M
b101 :
b101 H
b101 Q
b101 b
06
19
01
1)
02
00
07
b0 ;
b0 L
b0 O
b101 /
b101 E
b101 `
b100 .
b100 ^
b100 e
b0 ,
b0 F
b0 k
b0 +
b0 R
b0 a
b0 l
b10100000 P
b101 =
b101 B
b101 ]
b101 4
b101 C
b101 U
b101 _
b0 K
0J
b1 j
b101 h
b0 g
b10011 N
b0 5
b0 I
b10100000000000010010011 3
b10100000000000010010011 T
b10100000000000010010011 X
b10100000000000010010011 Y
b1 [
b100 >
b100 @
b100 \
b0 -
b0 A
b0 D
b0 W
b0 f
1"
#2000
0"
#3000
1"
#4000
0"
#5000
b11 (
b11 d
b11 i
b11 :
b11 H
b11 Q
b11 b
b11 /
b11 E
b11 `
b11 4
b11 C
b11 U
b11 _
b10 j
b11 h
b1000 .
b1000 ^
b1000 e
b1100000000000100010011 3
b1100000000000100010011 T
b1100000000000100010011 X
b1100000000000100010011 Y
b1 [
b111 =
b111 B
b111 ]
b1000 >
b1000 @
b1000 \
b100 -
b100 A
b100 D
b100 W
b100 f
1"
1$
#6000
0"
#7000
b101000 (
b101000 d
b101000 i
b101 <
b101 G
b101 M
b101000 :
b101000 H
b101000 Q
b101000 b
09
b10 ;
b10 L
b10 O
b11 /
b11 E
b11 `
b101 ,
b101 F
b101 k
b11 +
b11 R
b11 a
b11 l
b100010 P
bx 4
bx C
bx U
bx _
b1 K
b11 j
b10 h
b1 g
b110011 N
b1 5
b1 I
b1100 .
b1100 ^
b1100 e
b1000001001000110110011 3
b1000001001000110110011 T
b1000001001000110110011 X
b1000001001000110110011 Y
b1 [
bx =
bx B
bx ]
b1100 >
b1100 @
b1100 \
b1000 -
b1000 A
b1000 D
b1000 W
b1000 f
1"
#8000
0"
#9000
b110 (
b110 d
b110 i
b110 :
b110 H
b110 Q
b110 b
b11 <
b11 G
b11 M
b100 K
b100 j
b100 5
b100 I
b10000 .
b10000 ^
b10000 e
b1000001100001000110011 3
b1000001100001000110011 T
b1000001100001000110011 X
b1000001100001000110011 Y
b1 [
b10000 >
b10000 @
b10000 \
b1100 -
b1100 A
b1100 D
b1100 W
b1100 f
1"
#10000
0"
#11000
b101110 (
b101110 d
b101110 i
b101110 :
b101110 H
b101110 Q
b101110 b
b110 /
b110 E
b110 `
b10 <
b10 G
b10 M
b101000 ,
b101000 F
b101000 k
b110 +
b110 R
b110 a
b110 l
b0 K
b101 j
b100 h
b11 g
b0 5
b0 I
b10100 .
b10100 ^
b10100 e
b10000011000001010110011 3
b10000011000001010110011 T
b10000011000001010110011 X
b10000011000001010110011 Y
b1 [
b10100 >
b10100 @
b10100 \
b10000 -
b10000 A
b10000 D
b10000 W
b10000 f
1"
#12000
0"
#13000
18
b0 (
b0 d
b0 i
b0 :
b0 H
b0 Q
b0 b
b0 /
b0 E
b0 `
19
0)
10
b0 ;
b0 L
b0 O
b0 ,
b0 F
b0 k
b101110 +
b101110 R
b101110 a
b101110 l
b10001000 P
b10100 =
b10100 B
b10100 ]
b0 4
b0 C
b0 U
b0 _
b10 K
b0 j
b101 h
b0 g
b100011 N
b10 5
b10 I
b11000 .
b11000 ^
b11000 e
b10100000010000000100011 3
b10100000010000000100011 T
b10100000010000000100011 X
b10100000010000000100011 Y
b1 [
b11000 >
b11000 @
b11000 \
b10100 -
b10100 A
b10100 D
b10100 W
b10100 f
1"
#14000
0"
#15000
b101110 (
b101110 d
b101110 i
b101110 *
b101110 S
b101110 c
11
1)
12
00
b0 +
b0 R
b0 a
b0 l
b11110000 P
b110 j
b0 h
b11 N
b11100 .
b11100 ^
b11100 e
b10001100000011 3
b10001100000011 T
b10001100000011 X
b10001100000011 Y
b1 [
b11000 =
b11000 B
b11000 ]
b11100 >
b11100 @
b11100 \
b11000 -
b11000 A
b11000 D
b11000 W
b11000 f
1"
#16000
0"
#17000
08
b101111 :
b101111 H
b101111 Q
b101111 b
b101111 (
b101111 d
b101111 i
01
02
b1 /
b1 E
b1 `
b101110 ,
b101110 F
b101110 k
b101 +
b101 R
b101 a
b101 l
b10100000 P
b1 4
b1 C
b1 U
b1 _
b0 K
b1 h
b110 g
b10011 N
b0 5
b0 I
b100000 .
b100000 ^
b100000 e
b100110000001100010011 3
b100110000001100010011 T
b100110000001100010011 X
b100110000001100010011 Y
b1 [
b11101 =
b11101 B
b11101 ]
b100000 >
b100000 @
b100000 \
b11100 -
b11100 A
b11100 D
b11100 W
b11100 f
1"
#18000
0"
#19000
b1 (
b1 d
b1 i
b110 <
b110 G
b110 M
b1 :
b1 H
b1 Q
b1 b
16
09
0)
17
b1 ;
b1 L
b1 O
b101110 /
b101110 E
b101110 `
b101110 +
b101110 R
b101110 a
b101110 l
b101 P
b1000 4
b1000 C
b1000 U
b1000 _
b101111 ,
b101111 F
b101111 k
b1 K
b1000 j
b101 h
b1100011 N
b1 5
b1 I
b101000 .
b101000 ^
b101000 e
b10100110001010001100011 3
b10100110001010001100011 T
b10100110001010001100011 X
b10100110001010001100011 Y
b1 [
b101000 =
b101000 B
b101000 ]
b100100 >
b100100 @
b100100 \
b100000 -
b100000 A
b100000 D
b100000 W
b100000 f
1"
#20000
0"
#21000
b1011101 (
b1011101 d
b1011101 i
b10 <
b10 G
b10 M
b1011101 :
b1011101 H
b1011101 Q
b1011101 b
b101111 /
b101111 E
b101111 `
1)
07
b10 ;
b10 L
b10 O
b101110 ,
b101110 F
b101110 k
b101111 +
b101111 R
b101111 a
b101111 l
b100010 P
bx 4
bx C
bx U
bx _
06
b0 K
b111 j
b110 h
b101 g
b110011 N
b0 5
b0 I
b101100 .
b101100 ^
b101100 e
b11000101000001110110011 3
b11000101000001110110011 T
b11000101000001110110011 X
b11000101000001110110011 Y
b1 [
bx =
bx B
bx ]
b101100 >
b101100 @
b101100 \
b101000 -
b101000 A
b101000 D
b101000 W
b101000 f
1"
#22000
0"
#23000
x6
x8
bx :
bx H
bx Q
bx b
bx (
bx d
bx i
bx /
bx E
bx `
x9
x1
x)
x2
x0
x7
bx ;
bx L
bx O
b0 ,
b0 F
b0 k
b0 +
b0 R
b0 a
b0 l
bx P
b0 j
b0 h
b0 g
b0 N
bx .
bx ^
bx e
b0 3
b0 T
b0 X
b11111111111111111111111111111111 [
b110000 >
b110000 @
b110000 \
b101100 -
b101100 A
b101100 D
b101100 W
b101100 f
1"
#24000
0"
#25000
1!
bx >
bx @
bx \
bx -
bx A
bx D
bx W
bx f
1"
#26000
0"
b0 %
b100000 &
