$date
	Sat May 31 15:54:28 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module data_path_tb $end
$var wire 1 ! endFile $end
$var reg 1 " clockDP_ $end
$var reg 201 # nomeArquivoInstDP_ [200:0] $end
$var reg 1 $ resetDP_ $end
$var reg 32 % valorReg [31:0] $end
$var integer 32 & i [31:0] $end
$scope module dpR5 $end
$var wire 1 ' andOutDP $end
$var wire 1 " clockDP $end
$var wire 201 ( nomeArquivoDP [200:0] $end
$var wire 1 $ resetDP $end
$var wire 32 ) writeRegDataDP [31:0] $end
$var wire 1 * regWriteDP $end
$var wire 32 + readMemDP [31:0] $end
$var wire 32 , readData2DP [31:0] $end
$var wire 32 - readData1DP [31:0] $end
$var wire 32 . pcOutDP [31:0] $end
$var wire 32 / pcInDP [31:0] $end
$var wire 32 0 muxAluOutDP [31:0] $end
$var wire 1 1 memWriteDP $end
$var wire 1 2 memToRegDP $end
$var wire 1 3 memReadDP $end
$var wire 32 4 instructionDP [31:0] $end
$var wire 32 5 immGenOutDP [31:0] $end
$var wire 4 6 f3f7AluCtrlDP [3:0] $end
$var wire 1 ! endFile $end
$var wire 1 7 branchDP $end
$var wire 1 8 aluZeroDP $end
$var wire 1 9 aluSrcDP $end
$var wire 32 : aluOutDP [31:0] $end
$var wire 2 ; aluOpDP [1:0] $end
$var wire 4 < aluCtrlDP [3:0] $end
$var wire 32 = addBranchDP [31:0] $end
$var wire 32 > add4OutDP [31:0] $end
$scope module Alu_Control $end
$var wire 4 ? f3f7ACtrl [3:0] $end
$var wire 1 @ funct7ACtrl $end
$var wire 3 A funct3ACtrl [2:0] $end
$var wire 2 B aluOpACtrl [1:0] $end
$var reg 4 C aluCtrlACtrl [3:0] $end
$upscope $end
$scope module add4 $end
$var wire 32 D a [31:0] $end
$var wire 32 E out [31:0] $end
$var wire 32 F b [31:0] $end
$upscope $end
$scope module addBranch $end
$var wire 32 G out [31:0] $end
$var wire 32 H b [31:0] $end
$var wire 32 I a [31:0] $end
$upscope $end
$scope module alu $end
$var wire 4 J aluControlAlu [3:0] $end
$var wire 1 8 zeroAlu $end
$var wire 32 K aluInput2 [31:0] $end
$var wire 32 L aluInput1 [31:0] $end
$var reg 32 M aluResultAlu [31:0] $end
$upscope $end
$scope module ctrlDP $end
$var wire 7 N instructionCtrl [6:0] $end
$var wire 1 * RegWriteCtrl $end
$var wire 1 1 MemWriteCtrl $end
$var wire 1 2 MemToRegCtrl $end
$var wire 1 3 MemReadCtrl $end
$var wire 1 7 BranchCtrl $end
$var wire 1 9 ALUSrcCtrl $end
$var wire 2 O ALUOpCtrl [1:0] $end
$var reg 8 P outputCtrl [7:0] $end
$upscope $end
$scope module dataMem $end
$var wire 32 Q addressDM [31:0] $end
$var wire 1 " clock $end
$var wire 1 3 memReadDM $end
$var wire 1 1 memWriteDM $end
$var wire 32 R writeDataDM [31:0] $end
$var reg 32 S readDataDM [31:0] $end
$upscope $end
$scope module immGen $end
$var wire 32 T instructionImmGen [31:0] $end
$var reg 32 U immediateImmGen [31:0] $end
$upscope $end
$scope module insMem $end
$var wire 201 V nomeArquivo [200:0] $end
$var wire 32 W readAddress [31:0] $end
$var reg 1 ! fimDoArquivo $end
$var reg 32 X instruction [31:0] $end
$var reg 32 Y linha [31:0] $end
$var integer 32 Z arquivo [31:0] $end
$var integer 32 [ error [31:0] $end
$upscope $end
$scope module muxAdds $end
$var wire 1 ' ctrl $end
$var wire 32 \ input1 [31:0] $end
$var wire 32 ] input2 [31:0] $end
$var wire 32 ^ out [31:0] $end
$upscope $end
$scope module muxAlu $end
$var wire 1 9 ctrl $end
$var wire 32 _ input2 [31:0] $end
$var wire 32 ` out [31:0] $end
$var wire 32 a input1 [31:0] $end
$upscope $end
$scope module muxDataMem $end
$var wire 1 2 ctrl $end
$var wire 32 b input1 [31:0] $end
$var wire 32 c input2 [31:0] $end
$var wire 32 d out [31:0] $end
$upscope $end
$scope module pcDP $end
$var wire 1 " clock $end
$var wire 32 e pcIn [31:0] $end
$var wire 1 $ reset $end
$var reg 32 f pcOut [31:0] $end
$upscope $end
$scope module regMem $end
$var wire 1 " clock $end
$var wire 5 g readReg1 [4:0] $end
$var wire 5 h readReg2 [4:0] $end
$var wire 1 * regWrite $end
$var wire 32 i writeData [31:0] $end
$var wire 5 j writeRegId [4:0] $end
$var reg 32 k readData1 [31:0] $end
$var reg 32 l readData2 [31:0] $end
$var integer 32 m i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b100000 m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
b10000000000000000000000000000011 Z
bx Y
bx X
bx W
b11010010110111001110000011101010111010001000100010100000011001000101110011101000111100001110100 V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
b100 D
bx C
bx B
bx A
x@
bx ?
bx >
bx =
bx <
bx ;
bx :
x9
x8
x7
bx 6
bx 5
bx 4
x3
x2
x1
bx 0
bx /
bx .
bx -
bx ,
bx +
x*
bx )
b11010010110111001110000011101010111010001000100010100000011001000101110011101000111100001110100 (
x'
bx &
bx %
0$
b11010010110111001110000011101010111010001000100010100000011001000101110011101000111100001110100 #
0"
x!
$end
#1000
08
b101010 )
b101010 d
b101010 i
b10 <
b10 C
b10 J
b101010 :
b101010 M
b101010 Q
b101010 b
0'
19
02
1*
03
01
07
b0 ;
b0 B
b0 O
b101010 0
b101010 K
b101010 `
b100 /
b100 ^
b100 e
b0 -
b0 L
b0 k
b0 ,
b0 R
b0 a
b0 l
b10100000 P
b101010 =
b101010 G
b101010 ]
b101010 5
b101010 H
b101010 U
b101010 _
b0 A
0@
b1 j
b1010 h
b0 g
b10011 N
b0 6
b0 ?
b10101000000000000010010011 4
b10101000000000000010010011 T
b10101000000000000010010011 X
b10101000000000000010010011 Y
b1 [
b100 >
b100 E
b100 \
b0 .
b0 F
b0 I
b0 W
b0 f
1"
#2000
0"
#3000
1"
#4000
0"
#5000
b10000 )
b10000 d
b10000 i
b10000 :
b10000 M
b10000 Q
b10000 b
b10000 0
b10000 K
b10000 `
b10000 5
b10000 H
b10000 U
b10000 _
b10 j
b10000 h
b1000 /
b1000 ^
b1000 e
b1000000000000000100010011 4
b1000000000000000100010011 T
b1000000000000000100010011 X
b1000000000000000100010011 Y
b1 [
b10100 =
b10100 G
b10100 ]
b1000 >
b1000 E
b1000 \
b100 .
b100 F
b100 I
b100 W
b100 f
1"
1$
#6000
0"
#7000
b1000 )
b1000 d
b1000 i
b1000 :
b1000 M
b1000 Q
b1000 b
b1000 0
b1000 K
b1000 `
b1000 5
b1000 H
b1000 U
b1000 _
b11 j
b1000 h
b1100 /
b1100 ^
b1100 e
b100000000000000110010011 4
b100000000000000110010011 T
b100000000000000110010011 X
b100000000000000110010011 Y
b1 [
b10000 =
b10000 G
b10000 ]
b1100 >
b1100 E
b1100 \
b1000 .
b1000 F
b1000 I
b1000 W
b1000 f
1"
#8000
0"
#9000
b1 )
b1 d
b1 i
b1 :
b1 M
b1 Q
b1 b
b1 0
b1 K
b1 `
b101010 ,
b101010 R
b101010 a
b101010 l
b1 5
b1 H
b1 U
b1 _
b111 j
b1 h
b10000 /
b10000 ^
b10000 e
b100000000001110010011 4
b100000000001110010011 T
b100000000001110010011 X
b100000000001110010011 Y
b1 [
b1101 =
b1101 G
b1101 ]
b10000 >
b10000 E
b10000 \
b1100 .
b1100 F
b1100 I
b1100 W
b1100 f
1"
#10000
0"
#11000
b100 )
b100 d
b100 i
b100 <
b100 C
b100 J
b100 :
b100 M
b100 Q
b100 b
09
b10 ;
b10 B
b10 O
b1 0
b1 K
b1 `
b1000 -
b1000 L
b1000 k
b1 ,
b1 R
b1 a
b1 l
b100010 P
bx 5
bx H
bx U
bx _
b101 A
b11 j
b111 h
b11 g
b110011 N
b101 6
b101 ?
b10100 /
b10100 ^
b10100 e
b11100011101000110110011 4
b11100011101000110110011 T
b11100011101000110110011 X
b11100011101000110110011 Y
b1 [
bx =
bx G
bx ]
b10100 >
b10100 E
b10100 \
b10000 .
b10000 F
b10000 I
b10000 W
b10000 f
1"
#12000
0"
#13000
18
b0 )
b0 d
b0 i
b10 <
b10 C
b10 J
b0 :
b0 M
b0 Q
b0 b
b0 0
b0 K
b0 `
19
0*
11
b0 ;
b0 B
b0 O
b101010 ,
b101010 R
b101010 a
b101010 l
b10001000 P
b10100 =
b10100 G
b10100 ]
b0 5
b0 H
b0 U
b0 _
b0 -
b0 L
b0 k
b10 A
b0 j
b1 h
b0 g
b100011 N
b10 6
b10 ?
b11000 /
b11000 ^
b11000 e
b100000010000000100011 4
b100000010000000100011 T
b100000010000000100011 X
b100000010000000100011 Y
b1 [
b11000 >
b11000 E
b11000 \
b10100 .
b10100 F
b10100 I
b10100 W
b10100 f
1"
#14000
0"
#15000
08
b100 )
b100 d
b100 i
b100 :
b100 M
b100 Q
b100 b
b100 -
b100 L
b100 k
b10000 ,
b10000 R
b10000 a
b10000 l
b10 h
b11 g
b11100 /
b11100 ^
b11100 e
b1000011010000000100011 4
b1000011010000000100011 T
b1000011010000000100011 X
b1000011010000000100011 Y
b1 [
b11000 =
b11000 G
b11000 ]
b11100 >
b11100 E
b11100 \
b11000 .
b11000 F
b11000 I
b11000 W
b11000 f
1"
#16000
0"
#17000
18
b0 :
b0 M
b0 Q
b0 b
b101010 )
b101010 d
b101010 i
b101010 +
b101010 S
b101010 c
12
1*
13
01
b0 -
b0 L
b0 k
b0 ,
b0 R
b0 a
b0 l
b11110000 P
b10 j
b0 h
b0 g
b11 N
b100000 /
b100000 ^
b100000 e
b10000100000011 4
b10000100000011 T
b10000100000011 X
b10000100000011 Y
b1 [
b11100 =
b11100 G
b11100 ]
b100000 >
b100000 E
b100000 \
b11100 .
b11100 F
b11100 I
b11100 W
b11100 f
1"
#18000
0"
#19000
08
b10000 )
b10000 d
b10000 i
b10000 +
b10000 S
b10000 c
b100 :
b100 M
b100 Q
b100 b
b100 -
b100 L
b100 k
b1 j
b11 g
b100100 /
b100100 ^
b100100 e
b11010000010000011 4
b11010000010000011 T
b11010000010000011 X
b11010000010000011 Y
b1 [
b100000 =
b100000 G
b100000 ]
b100100 >
b100100 E
b100100 \
b100000 .
b100000 F
b100000 I
b100000 W
b100000 f
1"
#20000
0"
#21000
18
b0 :
b0 M
b0 Q
b0 b
b0 )
b0 d
b0 i
02
03
b0 -
b0 L
b0 k
b10100000 P
b0 A
b100 j
b0 g
b10011 N
b0 6
b0 ?
b101000 /
b101000 ^
b101000 e
b1000010011 4
b1000010011 T
b1000010011 X
b1000010011 Y
b1 [
b100100 =
b100100 G
b100100 ]
b101000 >
b101000 E
b101000 \
b100100 .
b100100 F
b100100 I
b100100 W
b100100 f
1"
#22000
0"
#23000
08
b100 )
b100 d
b100 i
b100 :
b100 M
b100 Q
b100 b
b100 0
b100 K
b100 `
b100 5
b100 H
b100 U
b100 _
b100 h
b100 g
b101100 /
b101100 ^
b101100 e
b10000100000001000010011 4
b10000100000001000010011 T
b10000100000001000010011 X
b10000100000001000010011 Y
b1 [
b101100 =
b101100 G
b101100 ]
b101100 >
b101100 E
b101100 \
b101000 .
b101000 F
b101000 I
b101000 W
b101000 f
1"
#24000
0"
#25000
b1100 )
b1100 d
b1100 i
b110 <
b110 C
b110 J
b1100 :
b1100 M
b1100 Q
b1100 b
09
b10 ;
b10 B
b10 O
b100 0
b100 K
b100 `
b100010 P
bx 5
bx H
bx U
bx _
b10000 -
b10000 L
b10000 k
b100 ,
b100 R
b100 a
b100 l
1@
b1 j
b11 h
b1 g
b110011 N
b1000 6
b1000 ?
b110000 /
b110000 ^
b110000 e
b1000000001100001000000010110011 4
b1000000001100001000000010110011 T
b1000000001100001000000010110011 X
b1000000001100001000000010110011 Y
b1 [
bx =
bx G
bx ]
b110000 >
b110000 E
b110000 \
b101100 .
b101100 F
b101100 I
b101100 W
b101100 f
1"
#26000
0"
#27000
b1000 )
b1000 d
b1000 i
b1000 :
b1000 M
b1000 Q
b1000 b
b11 <
b11 C
b11 J
b1100 -
b1100 L
b1100 k
b100 A
0@
b101 j
b100 h
b100 6
b100 ?
b110100 /
b110100 ^
b110100 e
b10000001100001010110011 4
b10000001100001010110011 T
b10000001100001010110011 X
b10000001100001010110011 Y
b1 [
b110100 >
b110100 E
b110100 \
b110000 .
b110000 F
b110000 I
b110000 W
b110000 f
1"
#28000
0"
#29000
b11000 )
b11000 d
b11000 i
b11000 :
b11000 M
b11000 Q
b11000 b
b1 0
b1 K
b1 `
b101 <
b101 C
b101 J
b1 ,
b1 R
b1 a
b1 l
b1 A
b110 j
b111 h
b1 6
b1 ?
b111000 /
b111000 ^
b111000 e
b11100001001001100110011 4
b11100001001001100110011 T
b11100001001001100110011 X
b11100001001001100110011 Y
b1 [
b111000 >
b111000 E
b111000 \
b110100 .
b110100 F
b110100 I
b110100 W
b110100 f
1"
#30000
0"
#31000
x'
x8
bx :
bx M
bx Q
bx b
bx )
bx d
bx i
bx 0
bx K
bx `
x9
x2
x*
x3
x1
x7
bx ;
bx B
bx O
b10 <
b10 C
b10 J
b0 -
b0 L
b0 k
b0 ,
b0 R
b0 a
b0 l
bx P
b0 A
b0 j
b0 h
b0 g
b0 N
b0 6
b0 ?
bx /
bx ^
bx e
b0 4
b0 T
b0 X
b11111111111111111111111111111111 [
b111100 >
b111100 E
b111100 \
b111000 .
b111000 F
b111000 I
b111000 W
b111000 f
1"
#32000
0"
#33000
1!
bx >
bx E
bx \
bx .
bx F
bx I
bx W
bx f
1"
#34000
0"
b0 %
b100000 &
